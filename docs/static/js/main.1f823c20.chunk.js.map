{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifSearcherApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","estadoAnterior","type","value","onChange","target","placeholder","getGifs","category","a","catCodificada","encodeURI","url","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GifSearcherApp","categories","cat","ReactDOM","render","document","getElementById"],"mappings":"6MAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACbC,mBAAS,IADI,mBAC1CC,EAD0C,KAC9BC,EAD8B,KAejD,OACC,0BAAMC,SATc,SAAAC,GACpBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC9BR,GAAc,SAAAS,GAAc,OAAKP,GAAL,mBAAoBO,OAChDN,EAAc,OAKd,2BAAOO,KAAK,OAAOC,MAAOT,EAAYU,SAdd,SAAAP,GACzBF,EAAcE,EAAEQ,OAAOF,QAa6CG,YAAY,4B,uBCpBrEC,EAAO,uCAAG,WAAOC,GAAP,yBAAAC,EAAA,4DACP,mCACTC,EAAgBC,UAAUH,GAC1BI,EAHgB,iDAGgCF,EAHhC,6BACP,oCADO,SAKHG,MAAMD,GALH,cAKhBE,EALgB,gBAMCA,EAAKC,OANN,uBAMdC,EANc,EAMdA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EAC5B,MAAO,CACNC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXT,IAAG,UAAEO,EAAIG,cAAN,aAAE,EAAYC,iBAAiBX,QAZd,kBAgBfK,GAhBe,4CAAH,sDCEPO,EAAc,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOT,EAAU,EAAVA,IAExC,OACC,yBAAKa,UAAU,0CACd,yBAAKC,IAAKd,EAAKe,IAAKN,IACpB,2BAAIA,KCFMO,EAAU,SAAC,GAAkB,IAAhBpB,EAAe,EAAfA,SAAe,ECFb,SAACA,GAAc,IAAD,EAGff,mBAAS,CAClCuB,KAAM,GACNa,SAAS,IAL+B,mBAGlCC,EAHkC,KAG3BC,EAH2B,KAmBzC,OAVAC,qBAAU,WACTzB,EAAQC,GAAUyB,MAAK,SAAAC,GACtBH,EAAS,CACRf,KAAMkB,EACNL,SAAS,SAGT,CAACrB,IAGGsB,EDf2BK,CAAa3B,GAAjCc,EAF0B,EAEhCN,KAAca,EAFkB,EAElBA,QAEtB,OACC,oCACC,wBAAIJ,UAAU,qCAAqCjB,GAEjDqB,GAAW,uBAAGJ,UAAU,oCAAb,iBACb,yBAAKA,UAAU,aAEbH,EAAOJ,KAAI,SAAAC,GACV,OAAO,kBAAC,EAAD,eAAaiB,IAAKjB,EAAIC,IAAQD,UEb9BkB,EAAiB,WAAO,IAAD,EAEC5C,mBAAS,IAFV,mBAE5B6C,EAF4B,KAEhB9C,EAFgB,KAInC,OACC,oCACC,8CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,4BAEE8C,EAAWpB,KAAI,SAAAqB,GAAG,OACjB,kBAAC,EAAD,CAASH,IAAKG,EAAK/B,SAAU+B,U,MCVnCC,IAASC,OACR,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.1f823c20.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n\tconst [inputValue, setInputValue] = useState('')\r\n\r\n\tconst handleInputChange = e => {\r\n\t\tsetInputValue(e.target.value);\r\n\t}\r\n\r\n\tconst handleSubmit = e => {\r\n\t\te.preventDefault();\r\n\r\n\t\tif (inputValue.trim().length > 2) {\r\n\t\t\tsetCategories(estadoAnterior => [inputValue, ...estadoAnterior]);\r\n\t\t\tsetInputValue('');\r\n\t\t}\r\n\t}\r\n\treturn (\r\n\t\t<form onSubmit={handleSubmit}>\r\n\t\t\t<input type=\"text\" value={inputValue} onChange={handleInputChange} placeholder=\"¿Qué buscás?\" />\r\n\t\t</form>\r\n\t)\r\n}\r\n\r\nAddCategory.propTypes = {\r\n\tsetCategories: PropTypes.func.isRequired\r\n}","export const getGifs = async (category) => {\r\n\tconst apiKey = 'aRYBnVoFvZ6MkWdARb9OwwJXTMQBaD64';\r\n\tconst catCodificada = encodeURI(category); // 'Guitarra electrica' => Guitarra%20electrica\r\n\tconst url = `https://api.giphy.com/v1/gifs/search?q=${catCodificada}&limit=10&api_key=${apiKey}`;\r\n\r\n\tconst resp = await fetch(url);\r\n\tconst { data } = await resp.json();\r\n\r\n\tconst gifs = data.map(img => {\r\n\t\treturn {\r\n\t\t\tid: img.id,\r\n\t\t\ttitle: img.title,\r\n\t\t\turl: img.images?.downsized_medium.url\r\n\t\t}\r\n\t})\r\n\r\n\treturn gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({ id, title, url }) => {\r\n\r\n\treturn (\r\n\t\t<div className='card animate__animated animate__fadeIn'>\r\n\t\t\t<img src={url} alt={title} />\r\n\t\t\t<p>{title}</p>\r\n\t\t</div>\r\n\t)\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem'\r\n\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n\tconst { data: images, loading } = useFetchGifs(category); // Desestructuracion con renombrado\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h3 className='animate__animated animate__fadeIn'>{category}</h3>\r\n\r\n\t\t\t{(loading && <p className='animate__animated animate__flash'>: Cargando...</p>)}\r\n\t\t\t<div className=\"card-grid\">\r\n\t\t\t\t{\r\n\t\t\t\t\timages.map(img => {\r\n\t\t\t\t\t\treturn <GifGridItem key={img.id} {...img} /> // Spread de objeto\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t</>\r\n\t)\r\n}\r\n","import { useState, useEffect } from \"react\"\r\nimport { getGifs } from '../helpers/getGifs'\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n\r\n\tconst [state, setState] = useState({\r\n\t\tdata: [],\r\n\t\tloading: true\r\n\t})\r\n\r\n\t// Similar a componentDidMount\r\n\tuseEffect(() => {\r\n\t\tgetGifs(category).then(imgs => {\r\n\t\t\tsetState({\r\n\t\t\t\tdata: imgs,\r\n\t\t\t\tloading: false\r\n\t\t\t})\r\n\t\t})\r\n\t}, [category]) // El segundo arg es un [] de dependencias\r\n\t// Si alguno de los valores pasados como dependencia cambia, se vuelve a ejecutar el useEffect\r\n\r\n\treturn state;\r\n}","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifSearcherApp = () => {\r\n\r\n\tconst [categories, setCategories] = useState([]);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h2>GifSearcherApp</h2>\r\n\t\t\t<AddCategory setCategories={setCategories} />\r\n\t\t\t<ol>\r\n\t\t\t\t{\r\n\t\t\t\t\tcategories.map(cat =>\r\n\t\t\t\t\t\t<GifGrid key={cat} category={cat} />\r\n\t\t\t\t\t)\r\n\t\t\t\t}\r\n\t\t\t</ol>\r\n\t\t</>\r\n\t);\r\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifSearcherApp } from './GifSearcherApp'\nimport './index.css';\n\nReactDOM.render(\n\t<GifSearcherApp />,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}